[tool.poetry]
name = "eKoNLPy"
version = "1.0.1"
description = "A Korean natural language processing toolkit for economic analysis"
authors = ["Young Joon Lee <entelecheia@hotmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "ekonlpy", from = "src" }]
homepage = "https://ekonlpy.entelecheia.ai/"
repository = "https://github.com/entelecheia/eKoNLPy"
keywords = ["KoNLPy", "Tokenization", "Sentiment analysis", "Monetary policy"]
include = [
    "src/ekonlpy/data/*/*.txt",
    "src/ekonlpy/data/*/*.csv",
    "src/ekonlpy/data/*/*/*.txt",
    "src/ekonlpy/data/*/*/*.csv",
    "src/ekonlpy/data/model/*",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
fugashi = "^1.2.1"
mecab-ko-dic = "^1.0.0"
nltk = "^3.8.1"
scipy = "^1.10.1"
mecab-python3 = "^1.0.6"
pandas = "^2.0.0"

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^7.33.1"
setuptools-scm = "^7.1.0"
isort = "^5.12.0"
black = "^23.1.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
flake8-pyproject = "^1.2.2"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
commitizen = "^2.42.1"

[tool.black]
exclude = [
    '_version.py',
    'node_modules',
    '_build',
    'docs',
    'tests',
    'venv',
    '.copier-template',
    '.refs',
]

[tool.isort]
profile = "black"
skip = [
    '_version.py',
    'node_modules',
    '_build',
    'docs',
    'tests',
    'venv',
    '.copier-template',
    '.refs',
]

[tool.flake8]
ignore = ['F401', 'E501', 'W503']
exclude = [
    "node_modules",
    "_build",
    "docs",
    "tests",
    "venv",
    ".copier-template",
    ".refs",
]
per-file-ignores = ['__init__.py:F401', '_version.py:W292']

[tool.mypy]
namespace_packages = true
exclude = [
    "node_modules",
    "build",
    "_build",
    "dist",
    "docs",
    "tests",
    "venv",
    ".copier-template",
    ".refs",
]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = true
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.8"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.

[tool.coverage.report]
exclude_lines = ['if __name__ == "__main__":']

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.1"
tag_format = "v$version"

[tool.setuptools_scm]
write_to = "src/ekonlpy/_version.py"
write_to_template = '__version__ = "{version}"'
tag_regex = '^(?P<prefix>v)?(?P<version>[^\+]+)(?P<suffix>.*)?$'

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:tool.poetry.version"
version_source = "tag"
commit_version_number = true                                    # required for version_source = "tag"
commit_subject = "chore(release): :rocket: {version} [skip ci]"
prerelease_tag = "rc"
major_on_zero = true
tag_commit = true
changelog_file = "CHANGELOG.md"
upload_to_repository = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
hvcs = "github"                                                 # hosting version control system, gitlab is also supported

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = 'setuptools.build_meta'
