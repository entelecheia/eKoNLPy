---
name: lint & test

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "src/**"
      - "tests/**"

jobs:
  build:
    # Name the Job
    name: test-code-base
    # Set the agent to run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
      # Checkout the code base #
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # install poetry
      - name: Install poetry
        run: pipx install poetry>=1.3.2

      # set up python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      # initialize
      - name: Initialize
        run: make initialize

      # install dependencies
      - name: Install dependencies for linters
        run: poe install-dev

      # run linters
      - name: Run linters
        run: |
          set -o pipefail
          poe lint

      # run unit tests
      - name: Run unit-tests
        run: |
          set -o pipefail
          poe tests-cov-fail

      # add content to GitHub summary
      - name: Pytest coverage GitHub summary
        run: |
          set -o pipefail
          echo '# Coverage report' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat tests/pytest-coverage.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '\n\n\n'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
